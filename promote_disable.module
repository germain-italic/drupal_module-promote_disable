<?php

/**
 * Implements hook_menu().
 */
function promote_disable_menu() {
  $items = array();

  $items['admin/config/content/promote_disable'] = array(
    'title' => 'Promote disable',
    'description' => 'Configuration for Promote disable module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('promote_disable_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Page callback: Promote disable settings
 *
 * @see promote_disable_menu()
 */
function promote_disable_form($form, &$form_state) {
  $form['promote_disable_node_types'] = array(
    '#type' => 'select',
    '#multiple' => TRUE,
    '#size' => count(_promote_disable_node_types()),
    '#title' => t('Node types'),
    '#default_value' => variable_get('promote_disable_node_types'),
    '#options' => _promote_disable_node_types(),
    '#description' => t('Select the node types on which you would like to disable the "Promoted to front page" option.'),
  );

  return system_settings_form($form);
}

/**
 * Simple function to return a FAPI select options array.
 *
 * @see promote_disable_form()
 */
function _promote_disable_node_types() {
  $options = array();
  $node_types = node_type_get_types();
  foreach ($node_types as $key => $value) {
    $options[$key] = $value->name;
  }
  asort($options);
  return $options;  
}
 
/**
 * Implements hook_form_alter().
 */
function promote_disable_form_alter(&$form, &$form_state, $form_id) {
  // Are we on a node form?
  if (strpos($form_id, '_node_form') !== FALSE) {
    // The current form's node type.
    $node_type = $form['type']['#value'];
    // Our saved node types.
    $node_types = variable_get('promote_disable_node_types');
    // Is this node type one we've set?
    if (in_array($node_type, $node_types)) {
      // Disable the form element.
      $form['options']['promote']['#disabled'] = TRUE;
      // Add a submit function to the start of the #submit array.
      array_unshift($form['#submit'], '_promote_disable_form_submit');
    }
  }
}

/**
 * This function works to change the value of the "promoted"
 * form field if it happens to be set.
 *
 * @see promote_disable_form_alter()
 */
function _promote_disable_form_submit($form, &$form_state) {
  // Change the appropriate values.
  $form_state['input']['promote'] = 0;
  $form_state['values']['promote'] = 0;
}